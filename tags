!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!JSON	a,array	/arrays/
!_TAG_KIND_DESCRIPTION!JSON	b,boolean	/booleans/
!_TAG_KIND_DESCRIPTION!JSON	n,number	/numbers/
!_TAG_KIND_DESCRIPTION!JSON	o,object	/objects/
!_TAG_KIND_DESCRIPTION!JSON	s,string	/strings/
!_TAG_KIND_DESCRIPTION!JSON	z,null	/nulls/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PARSER_VERSION!C	0.0	/current.age/
!_TAG_PARSER_VERSION!JSON	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	C:/Users/vlada/OneDrive/Desktop/c++/laboratoryworks_PC/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/ebc90c2/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
0	./.vscode/tasks.json	/^                "$gcc"$/;"	s	array:tasks.0.problemMatcher
0	./.vscode/tasks.json	/^                "-fdiagnostics-color=always",$/;"	s	array:tasks.0.args
0	./.vscode/tasks.json	/^        {$/;"	o	array:tasks
1	./.vscode/tasks.json	/^                "-g",$/;"	s	array:tasks.0.args
2	./.vscode/tasks.json	/^                "${file}",$/;"	s	array:tasks.0.args
3	./.vscode/tasks.json	/^                "-o",$/;"	s	array:tasks.0.args
4	./.vscode/tasks.json	/^                "${fileDirname}\\\\${fileBasenameNoExtension}.exe"$/;"	s	array:tasks.0.args
Buffer	./lab4.c	/^typedef struct Buffer {$/;"	s	file:
Buffer	./lab4.c	/^} Buffer;$/;"	t	typeref:struct:Buffer	file:
Element	./lab5.c	/^} Element;$/;"	t	typeref:struct:__anon1477c3970208	file:
Element_type	./lab5.c	/^} Element_type;$/;"	t	typeref:enum:__anon1477c3970103	file:
IsDouble	./lab5.c	/^bool IsDouble(const char* str) {$/;"	f	typeref:typename:bool
IsInteger	./lab5.c	/^bool IsInteger(const char* str) {$/;"	f	typeref:typename:bool
__anon1477c3970103	./lab5.c	/^typedef enum {$/;"	g	file:
__anon1477c3970208	./lab5.c	/^typedef struct {$/;"	s	file:
__anon1477c397030a	./lab5.c	/^    union {$/;"	u	struct:__anon1477c3970208	file:
__anon1477c3970408	./lab5.c	/^typedef struct {$/;"	s	file:
args	./.vscode/tasks.json	/^            "args": [$/;"	a	object:tasks.0
bubbleSort	./lab2.c	/^void bubbleSort(int arr[], int n) {$/;"	f	typeref:typename:void
c	./lab5.c	/^        char c;$/;"	m	union:__anon1477c3970208::__anon1477c397030a	typeref:typename:char	file:
capacity	./lab5.c	/^    int capacity;  $/;"	m	struct:__anon1477c3970408	typeref:typename:int	file:
command	./.vscode/tasks.json	/^            "command": "C:\\\\msys64\\\\mingw64\\\\bin\\\\gcc.exe",$/;"	s	object:tasks.0
create_stack	./lab5.c	/^stack* create_stack(int capacity) {$/;"	f	typeref:typename:stack *
ctype.h	./.vscode/settings.json	/^        "ctype.h": "c"$/;"	s	object:files.associations
cwd	./.vscode/tasks.json	/^                "cwd": "${fileDirname}"$/;"	s	object:tasks.0.options
d	./lab5.c	/^        double d;$/;"	m	union:__anon1477c3970208::__anon1477c397030a	typeref:typename:double	file:
data	./lab5.c	/^    } data;$/;"	m	struct:__anon1477c3970208	typeref:union:__anon1477c3970208::__anon1477c397030a	file:
deleteBuffer	./lab4.c	/^void deleteBuffer(Buffer *buffer) {$/;"	f	typeref:typename:void
detail	./.vscode/tasks.json	/^            "detail": "Task generated by Debugger."$/;"	s	object:tasks.0
determinate	./lab5.c	/^void determinate(stack* s) {$/;"	f	typeref:typename:void
elements	./lab5.c	/^    Element *elements;$/;"	m	struct:__anon1477c3970408	typeref:typename:Element *	file:
end_time	./lab2.c	/^struct timeval start_time, end_time;$/;"	v	typeref:struct:timeval
enterText	./lab4.c	/^void enterText(Buffer *buffer) {$/;"	f	typeref:typename:void
et_ch	./lab5.c	/^    et_ch,$/;"	e	enum:__anon1477c3970103	file:
et_dub	./lab5.c	/^    et_dub$/;"	e	enum:__anon1477c3970103	file:
et_int	./lab5.c	/^    et_int,$/;"	e	enum:__anon1477c3970103	file:
et_str	./lab5.c	/^    et_str,$/;"	e	enum:__anon1477c3970103	file:
files.associations	./.vscode/settings.json	/^    "files.associations": {$/;"	o
freestack	./lab5.c	/^void freestack(stack* s) {$/;"	f	typeref:typename:void
getRandom	./lab2.c	/^int getRandom(int min, int max) {$/;"	f	typeref:typename:int
group	./.vscode/tasks.json	/^            "group": {$/;"	o	object:tasks.0
i	./lab5.c	/^        int i;$/;"	m	union:__anon1477c3970208::__anon1477c397030a	typeref:typename:int	file:
initializeBuffer	./lab4.c	/^void initializeBuffer(Buffer *buffer) {$/;"	f	typeref:typename:void
insertionSort	./lab2.c	/^void insertionSort(int arr[], int n) {$/;"	f	typeref:typename:void
isDefault	./.vscode/tasks.json	/^                "isDefault": true$/;"	b	object:tasks.0.group
isDelimiter	./lab4.c	/^int isDelimiter(char c) {$/;"	f	typeref:typename:int
kind	./.vscode/tasks.json	/^                "kind": "build",$/;"	s	object:tasks.0.group
label	./.vscode/tasks.json	/^            "label": "C\/C++: gcc.exe build active file",$/;"	s	object:tasks.0
loadFromFile	./lab4.c	/^void loadFromFile(Buffer *buffer, const char *filename) {$/;"	f	typeref:typename:void
main	./lab2.c	/^int main() {$/;"	f	typeref:typename:int
main	./lab3.c	/^int main() {$/;"	f	typeref:typename:int
main	./lab4.c	/^int main() {$/;"	f	typeref:typename:int
main	./lab5.c	/^int main() {$/;"	f	typeref:typename:int
n	./lab2.c	/^int n = 100; $/;"	v	typeref:typename:int
options	./.vscode/tasks.json	/^            "options": {$/;"	o	object:tasks.0
partition	./lab2.c	/^int partition(int arr[], int low, int high) {$/;"	f	typeref:typename:int
peek	./lab5.c	/^Element peek(stack* s) {$/;"	f	typeref:typename:Element
pop	./lab5.c	/^Element pop(stack* s) {$/;"	f	typeref:typename:Element
printBuffer	./lab4.c	/^void printBuffer(Buffer *buffer){$/;"	f	typeref:typename:void
printMatrix	./lab3.c	/^void printMatrix(int** matrix, int rows, int cols) {$/;"	f	typeref:typename:void
problemMatcher	./.vscode/tasks.json	/^            "problemMatcher": [$/;"	a	object:tasks.0
push	./lab5.c	/^void push(stack* s, Element value) {$/;"	f	typeref:typename:void
quicksort	./lab2.c	/^void quicksort(int arr[], int low, int high) {$/;"	f	typeref:typename:void
replaceWord	./lab4.c	/^void replaceWord(Buffer *buffer, const char *oldWord, const char *newWord) {$/;"	f	typeref:typename:void
saveToFile	./lab4.c	/^void saveToFile(Buffer *buffer, const char *filename) {$/;"	f	typeref:typename:void
searchForWord	./lab4.c	/^int searchForWord(Buffer *buffer, const char *word) {$/;"	f	typeref:typename:int
selectionSort	./lab2.c	/^void selectionSort(int arr[], int n) {$/;"	f	typeref:typename:void
size	./lab4.c	/^    size_t size;$/;"	m	struct:Buffer	typeref:typename:size_t	file:
size	./lab5.c	/^    int size;     $/;"	m	struct:__anon1477c3970408	typeref:typename:int	file:
spiralSort	./lab3.c	/^void spiralSort(int** matrix, int rows, int cols) {$/;"	f	typeref:typename:void
stack	./lab5.c	/^} stack;$/;"	t	typeref:struct:__anon1477c3970408	file:
start_time	./lab2.c	/^struct timeval start_time, end_time;$/;"	v	typeref:struct:timeval
str	./lab5.c	/^        char *str;$/;"	m	union:__anon1477c3970208::__anon1477c397030a	typeref:typename:char *	file:
swap	./lab2.c	/^void swap(int* a, int* b) {$/;"	f	typeref:typename:void
tasks	./.vscode/tasks.json	/^    "tasks": [$/;"	a
text	./lab4.c	/^    char *text;$/;"	m	struct:Buffer	typeref:typename:char *	file:
type	./.vscode/tasks.json	/^            "type": "cppbuild",$/;"	s	object:tasks.0
type	./lab5.c	/^    Element_type type;$/;"	m	struct:__anon1477c3970208	typeref:typename:Element_type	file:
version	./.vscode/tasks.json	/^    "version": "2.0.0"$/;"	s
